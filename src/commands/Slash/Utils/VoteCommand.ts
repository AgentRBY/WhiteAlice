import { SlashCommand, SlashCommandRunOptions } from '../../../structures/Commands/SlashCommand';
import { SlashCommandBuilder } from '@discordjs/builders';
import { ErrorEmbed } from '../../../utils/Discord/Embed';
import { Message, MessageEmbed } from 'discord.js';
import { Colors } from '../../../static/Colors';

class VoteCommand extends SlashCommand {
  meta = new SlashCommandBuilder()
    .setName('vote')
    .setDescription('–°–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ')
    .addStringOption((option) =>
      option.setName('–æ–ø—Ü–∏–∏').setDescription('–í–≤–µ–¥–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é').setRequired(true),
    )
    .addStringOption((option) =>
      option.setName('–≤–æ–ø—Ä–æ—Å').setDescription('–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å').setRequired(false),
    );

  async run({ interaction }: SlashCommandRunOptions) {
    const options = interaction.options.getString('–æ–ø—Ü–∏–∏', true).split(',');
    const question = interaction.options.getString('–≤–æ–ø—Ä–æ—Å', false);

    if (options.length < 2) {
      const embed = ErrorEmbed('–í–≤–µ–¥–∏—Ç–µ –¥–≤–µ –∏–ª–∏ –±–æ–ª—å—à–µ –æ–ø—Ü–∏–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é');
      interaction.reply({ embeds: [embed], ephemeral: true });
      return;
    }

    if (options.length > 10) {
      const embed = ErrorEmbed('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å 10 –æ–ø—Ü–∏–π');
      interaction.reply({ embeds: [embed], ephemeral: true });
      return;
    }

    const embed = new MessageEmbed()
      .setTitle(question || '–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ')
      .setColor(Colors.Blue)
      .addFields(
        options.map((option, index) => ({
          name: `–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ${index + 1}`,
          value: option,
        })),
      );

    interaction.reply({ embeds: [embed], fetchReply: true }).then((message) => {
      if (!(message instanceof Message)) {
        return;
      }

      const reactions = {
        1: '1Ô∏è‚É£',
        2: '2Ô∏è‚É£',
        3: '3Ô∏è‚É£',
        4: '4Ô∏è‚É£',
        5: '5Ô∏è‚É£',
        6: '6Ô∏è‚É£',
        7: '7Ô∏è‚É£',
        8: '8Ô∏è‚É£',
        9: '9Ô∏è‚É£',
        10: 'üîü',
      };

      options.forEach((_, index) => {
        message.react(reactions[index + 1]);
      });
    });
  }
}

export default new VoteCommand();
